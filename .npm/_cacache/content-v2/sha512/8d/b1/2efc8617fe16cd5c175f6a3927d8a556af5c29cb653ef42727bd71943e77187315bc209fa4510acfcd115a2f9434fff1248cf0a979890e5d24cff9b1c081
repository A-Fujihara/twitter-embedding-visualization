{"_id":"@mysticatea/spy","_rev":"3-b4f3c305dbdd9bcffb7d0bc169430779","name":"@mysticatea/spy","dist-tags":{"latest":"0.1.2"},"versions":{"0.1.0":{"name":"@mysticatea/spy","version":"0.1.0","description":"Just a spy library.","main":"dist/index.js","engines":{"node":">=6"},"dependencies":{},"devDependencies":{"@mysticatea/eslint-plugin":"^7.0.0","@types/mocha":"^5.2.5","@types/node":"^10.12.1","codecov":"^3.1.0","eslint":"^5.8.0","mocha":"^5.2.0","nyc":"^13.1.0","rimraf":"^2.6.2","ts-node":"^7.0.1","typescript":"~3.1.4","warun":"^1.0.0"},"scripts":{"build":"npm run -s clean && tsc -p tsconfig.build.json","clean":"rimraf .nyc_output coverage dist","codecov":"codecov","lint":"eslint src test --ext .ts","test":"npm run -s lint && tsc -p tsconfig.test.json && nyc mocha \"test/*.ts\"","preversion":"npm test","version":"npm run -s build","postversion":"git push && git push --tags","watch":"warun \"{src,test}/**/*.ts\" -- nyc mocha \"test/*.ts\""},"repository":{"type":"git","url":"git+https://github.com/mysticatea/spy.git"},"keywords":["spy","test","testing"],"author":{"name":"Toru Nagashima","url":"https://github.com/mysticatea"},"license":"MIT","bugs":{"url":"https://github.com/mysticatea/spy/issues"},"homepage":"https://github.com/mysticatea/spy#readme","gitHead":"6a2dcb79899c3b41ebdd83e2239141667ed016e1","_id":"@mysticatea/spy@0.1.0","_npmVersion":"6.4.1","_nodeVersion":"11.0.0","_npmUser":{"name":"mysticatea","email":"star.ctor@gmail.com"},"dist":{"integrity":"sha512-2KQarJ3goXY/6nAnoTeo52AIdDwxmuKwF+JYCa/uuOA8wcNp7VC3zkNlnFzYMy8t1OitGItkBHlI/NIhoUH5WQ==","shasum":"e98864309ad47b42c452db9944464337ed64c8c1","tarball":"https://registry.npmjs.org/@mysticatea/spy/-/spy-0.1.0.tgz","fileCount":6,"unpackedSize":17446,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb27X9CRA9TVsSAnZWagAAFkYQAIwE13VXXIQqyZJZv48H\neKQ4ATAF2XmsQgG3/u1xL0P6EuxMf+B2PLU0wcIy4Ad4Afk3Tkwe7lu3h2xN\naFK8ulMeOhuyW2TeaQ65jjimEygQFyqNIdVmc+bc6PEv/tElkvDjlnW2Uj5Z\nk/KSEOl33LGF3PZffWDJXcmc0ZzQQU12gezILHhKRIfNWo1LhOcSrUouBKCz\nD+rckujGcKKx2T9eipX/rgZrCBVMj35q8mSnlYRNh9zGTNOl4D/Rmv2k6CtJ\nAN57oUyX37IzEJkEf7lJVU1ndu4ta7L2Fn97FdWs7WSvSwjGRkhQOuwzvdFE\nhGnIS2X4EmT5JTHU5CefxPDKfHQFsxpsqIlgaFOmUzdqGC81jThIdvNwfH1Y\ndhGrhjQoStFS5Bp4yZUf7Jcmne8OrnRVXYSldJUHa8n7n4Wga5IcFQlXEHdR\nj8NKmnvIWHY4SAj+ZCA1gey/nqKrRyToYIpMm40PKlRhk0iP/utTpIvZHFOQ\nualOh8O4UXKc2q9j9PgUTqnhyVVSK0aRgOGVo03fuCi9YyVkmDsLKo7sJxCK\nLqFh0AWv6g25kS5I3d69o/XN0g55yx8jm1O/7UtaMF5iuHGqi38BW8Njv89p\nOedfbUErxZ25KHgu319W86XHVm+AqbhoNzY2F5pUVFEKfnoOTIv2jda7qvg6\nEDU2\r\n=4pJL\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIA3hSr2QQqzaytL5ksiTzrh9QncQTyD/4P6+8BJeUjoyAiEA9N508JmFED1ktqzrc2b8An5MwVjRmyokkHlofkUihK8="}]},"maintainers":[{"name":"mysticatea","email":"star.ctor@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/spy_0.1.0_1541125628756_0.7495411073005018"},"_hasShrinkwrap":false},"0.1.1":{"name":"@mysticatea/spy","version":"0.1.1","description":"Just a spy library.","main":"dist/index.js","engines":{"node":">=6"},"dependencies":{},"devDependencies":{"@mysticatea/eslint-plugin":"^7.0.0","@types/mocha":"^5.2.5","@types/node":"^10.12.1","codecov":"^3.1.0","eslint":"^5.8.0","mocha":"^5.2.0","nyc":"^13.1.0","rimraf":"^2.6.2","ts-node":"^7.0.1","typescript":"~3.1.4","warun":"^1.0.0"},"scripts":{"build":"npm run -s clean && tsc -p tsconfig.build.json","clean":"rimraf .nyc_output coverage dist","codecov":"codecov","lint":"eslint src test --ext .ts","test":"npm run -s lint && tsc -p tsconfig.test.json && nyc mocha \"test/*.ts\"","preversion":"npm test","version":"npm run -s build","postversion":"git push && git push --tags","watch":"warun \"{src,test}/**/*.ts\" -- nyc mocha \"test/*.ts\""},"repository":{"type":"git","url":"git+https://github.com/mysticatea/spy.git"},"keywords":["spy","test","testing"],"author":{"name":"Toru Nagashima","url":"https://github.com/mysticatea"},"license":"MIT","bugs":{"url":"https://github.com/mysticatea/spy/issues"},"homepage":"https://github.com/mysticatea/spy#readme","gitHead":"4f9132981f563886346144433c5217ca5e2c1d0d","_id":"@mysticatea/spy@0.1.1","_npmVersion":"6.4.1","_nodeVersion":"11.0.0","_npmUser":{"name":"mysticatea","email":"star.ctor@gmail.com"},"dist":{"integrity":"sha512-FQ8u8AyS+3SUpASM9zuqzL4jdhqcnpiQyKk6m06SBtMxb3Uff4cX/O3+0gl7gpRhnLRL7Ly3zG4DyUdzd6alqw==","shasum":"f59954db87e638b7a1931ed208aec02c10b460f5","tarball":"https://registry.npmjs.org/@mysticatea/spy/-/spy-0.1.1.tgz","fileCount":6,"unpackedSize":17196,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb27xnCRA9TVsSAnZWagAAOo4P/ibQuAhPo9vBG3OVkH5H\nTXpwVMdXYGKQko192w/j8r4aGP2orhb0q8xoHsYQOI66oxqlYHCJ/8oqW6ib\n6KCprZSYUCHjW/muw/2pMvzdMVCY/abFs9Ijt3xy90vQ5xaPa5sF/GwGAAwX\nB8QNgBPXOgRrkLc33N3DqeHIg82t6UBf3EPufhetb/3LSNQG7P5cUhaUoLoo\nCtkXGNRDAzaS9ZmWqOOGXGWUZHlcup5Be2YUdpR784qyhQiLdCGo6WecwZ6V\nYb+wgZ2rFSfYyyGKVHKjsLGfWNJMiLKAsUJT6zxZOq/AveJqQR7IZ2a7MnaI\nmV8DrkuQPqszWwdKv54xY68BWiY4XDSBp2+N7xoAy++9bpe8sp9v1Nx7bWw3\n26F0rAXxZboZuxxFOifP8Ln68MojAfgIrbJkPssscf0WZketLtQoeRR3gz2H\nNdGL8nexffoopljFQp70BRutyFrYXqas/P3E6sKH3F4b+PVEL6MKArdj7TdK\nLaHlVhOUPL63qjM2oMcMc7Yp6wpaVnb+GtLnvs+HPtiKcclyNJFunBP6489p\nhIS3yVO8pYai19o6xFjV93XS5gYHyD/AeuCjtf6SzINohDVbKBEZn5QoDdfR\nyGWOeTgygeI4RcEOh0RbFLaWtCtc8BZro6EHTESAD8C5gsIbLUpmhWUX1jDa\nJPme\r\n=B2ye\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIHN2rmN3rMRf0FGwDX/iWh5pT9iRBOOu8wN+/zdL2zfTAiEAnGc33cw3j8J7wHVElmDf2ju2KEiTlqqpCUOFCFjeQ0o="}]},"maintainers":[{"name":"mysticatea","email":"star.ctor@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/spy_0.1.1_1541127270576_0.1506325212579911"},"_hasShrinkwrap":false},"0.1.2":{"name":"@mysticatea/spy","version":"0.1.2","description":"Just a spy library.","main":"dist/index.js","engines":{"node":">=6"},"dependencies":{},"devDependencies":{"@mysticatea/eslint-plugin":"^7.0.0","@types/mocha":"^5.2.5","@types/node":"^10.12.1","codecov":"^3.1.0","eslint":"^5.8.0","mocha":"^5.2.0","nyc":"^13.1.0","rimraf":"^2.6.2","ts-node":"^7.0.1","typescript":"~3.1.4","warun":"^1.0.0"},"scripts":{"build":"npm run -s clean && tsc -p tsconfig.build.json","clean":"rimraf .nyc_output coverage dist","codecov":"codecov","lint":"eslint src test --ext .ts","test":"npm run -s lint && tsc -p tsconfig.test.json && nyc mocha \"test/*.ts\"","preversion":"npm test","version":"npm run -s build","postversion":"git push && git push --tags","watch":"warun \"{src,test}/**/*.ts\" -- nyc mocha \"test/*.ts\""},"repository":{"type":"git","url":"git+https://github.com/mysticatea/spy.git"},"keywords":["spy","test","testing"],"author":{"name":"Toru Nagashima","url":"https://github.com/mysticatea"},"license":"MIT","bugs":{"url":"https://github.com/mysticatea/spy/issues"},"homepage":"https://github.com/mysticatea/spy#readme","gitHead":"bada3a7c57d35fb9d0e61a8f0e24937aa1aa470a","_id":"@mysticatea/spy@0.1.2","_npmVersion":"6.4.1","_nodeVersion":"11.0.0","_npmUser":{"name":"mysticatea","email":"star.ctor@gmail.com"},"dist":{"integrity":"sha512-1dNYC20p4GzwiTvOcFlMUDzPPfCtaNmYfa/UwKNIyHLx9BGCcoUQmZItjNgrq2oXq1FHCcrpeAalDh6CiPADng==","shasum":"8b5826a9ce79c76159c4a98ddc79f1ce8d32967b","tarball":"https://registry.npmjs.org/@mysticatea/spy/-/spy-0.1.2.tgz","fileCount":6,"unpackedSize":17722,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb3oLZCRA9TVsSAnZWagAANYcP/Rt6gYkxof00O+zkc1fJ\nv49KePTYYz+ODYNBDJ8AJgbGdOP8Arn9z7CeJOITlaayASNRMakqo7C6bY4x\n3DyQis5zW3bRTqUr5P7/PdFwGQzGI6jLQTeynOFY2Z8XIzWOlVTMgA4Uwk8c\ne3xdPcaYw2ygb1O9Th+DL1kDYp87Zszv9g8iW4uHgerGPIIhlBuE+NHgG3Nt\ns1wi342AEQsJFpQQ/flvaUIyDVL50V7gCOUdMJHoPA64SCtdZeX4QblBN1ZJ\n7hETAsNFNN2hOcmFOqhqqhyf3AM//pRlGtvEA960huPQM4LkWzH9PpW00AJE\nep8uvTLd8xHIeNC8EF207F66YK/mhK7Jsf8YlSMBKUMsPo2jaYNSaphovVY2\nxufPKuTaVgWGBhRn+d8cdSVwOlrafsy6ecocBEux6D6VbzJYNS9hTVZW4Yrp\nJEzc6AIxrr8cA+JNhSo3doMiKG6YBdN009vnZ4VxYBCF7LFxihc3IiaXaWsg\nqNeVJVfYOrF21znEZpt8d9/+CuCmfKmkKSj9TAq8i+G4VOepHhnokNr3WCA5\nmgb0SHeNkbHSFCD4+zxH3CHQDjfyxcH83pcII/LWxz0s0qS5J7rHDMKVkgIN\nuUveN0EO/iyhtZYXemFcamr/tqm/M1JmNJ3brW6mNTwvV5pW5OAUtD47OrA1\nwy1V\r\n=NtJk\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDtgCHkjm+Yq+HpHgw7yQYIztVmt6ITelsTY9PdUmOHzgIgU/Z5KFr2r9H16LDobvGMl6ihtPEAZGkF1OXHARbHHPA="}]},"maintainers":[{"name":"mysticatea","email":"star.ctor@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/spy_0.1.2_1541309144658_0.1646713297795508"},"_hasShrinkwrap":false}},"time":{"created":"2018-11-02T02:27:08.605Z","0.1.0":"2018-11-02T02:27:09.177Z","modified":"2022-04-06T07:13:55.112Z","0.1.1":"2018-11-02T02:54:30.697Z","0.1.2":"2018-11-04T05:25:44.792Z"},"maintainers":[{"name":"mysticatea","email":"star.ctor@gmail.com"}],"description":"Just a spy library.","homepage":"https://github.com/mysticatea/spy#readme","keywords":["spy","test","testing"],"repository":{"type":"git","url":"git+https://github.com/mysticatea/spy.git"},"author":{"name":"Toru Nagashima","url":"https://github.com/mysticatea"},"bugs":{"url":"https://github.com/mysticatea/spy/issues"},"license":"MIT","readme":"# @mysticatea/spy\n\n[![npm version](https://img.shields.io/npm/v/@mysticatea/spy.svg)](https://www.npmjs.com/package/@mysticatea/spy)\n[![Downloads/month](https://img.shields.io/npm/dm/@mysticatea/spy.svg)](http://www.npmtrends.com/@mysticatea/spy)\n[![Build Status](https://travis-ci.com/mysticatea/spy.svg?branch=master)](https://travis-ci.com/mysticatea/spy)\n[![Coverage Status](https://codecov.io/gh/mysticatea/spy/branch/master/graph/badge.svg)](https://codecov.io/gh/mysticatea/spy)\n[![Dependency Status](https://david-dm.org/mysticatea/spy.svg)](https://david-dm.org/mysticatea/spy)\n\nA spy library for TypeScript.\n\n\n## 💿 Installation\n\nUse [npm](https://www.npmjs.com/) or [yarn](https://yarnpkg.com/).\n\n```bash\nnpm install --save-dev @mysticatea/spy\n```\n\n**Requirements:**\n\n- Node.js 6.0.0 and over.\n- TypeScript 3.1 and over (if you use `spy` in TypeScript).\n\n\n## 📖 Usage\n\n```ts\nimport { spy } from \"@mysticatea/spy\"\n\n//------------------------------------------------------------------------------\n// Create a spy function.\nconst func1 = spy()\n\n// Call it.\nfunc1()\n\n// Check it.\nconsole.log(func1.calls.length) //→ 1\nconsole.log(func1.calls[0]) //→ { type: \"return\", this: undefined, arguments: [], return: undefined }\nconsole.log(func1.returnedCalls.length) //→ 1\nconsole.log(func1.returnedCalls[0]) //→ { type: \"return\", this: undefined, arguments: [], return: undefined }\nconsole.log(func1.thrownCalls.length) //→ 0\n\n//------------------------------------------------------------------------------\n// Create a spy function with that behavior.\nconst func2 = spy((value: number): string => {\n    if (value < 0) {\n        throw new Error(\"oops!\")\n    }\n    return String(value)\n})\n// func2 is `(value: number) => string` and some additional properties.\n\n// Call it.\nconst retv2 = func2(777)\ntry { func2(-1) } catch { /*ignore*/ }\n\n// Check it.\nconsole.log(retv2) //→ \"777\"\nconsole.log(func2.calls.length) //→ 2\nconsole.log(func2.calls[0]) //→ { type: \"return\", this: undefined, arguments: [1], return: \"1\" }\nconsole.log(func2.calls[1]) //→ { type: \"throw\", this: undefined, arguments: [-1], throw: [object Error] }\nconsole.log(func2.returnedCalls.length) //→ 1\nconsole.log(func2.returnedCalls[0]) //→ { type: \"return\", this: undefined, arguments: [1], return: \"1\" }\nconsole.log(func2.thrownCalls.length) //→ 1\nconsole.log(func2.thrownCalls[0]) //→ { type: \"throw\", this: undefined, arguments: [-1], throw: [object Error] }\n```\n\n\n## 📚 API Reference\n\n### s = spy<T>(func?)\n\n**Parameters:**\n\nName | Type | Description\n:----|:-----|:------------\n`T` | `* extends (...args: any[]) => any` | The type of `func`. If `func` is omitted, this is `() => void`.\n`func` | `T` or `undefined` | Optional behavior of the spy.\n\n**Return value:**\n\nType | Description\n:----|:------------\n[`Spy<T>`](src/index.ts#L2) | The created spy function.\n\n> The `length ` property of the spy function can be different to `func.length`.\n\n**Details:**\n\nCreate a spy function.\n\nThe spy function will record the call information of itself.\nYou can access the information with `calls` property and something like.\n\nSee below for spy's properties.\n\n### s.calls\n\nThe array of call information.\n\nThe element of this array has the following properties:\n\nName | Type | Description\n:----|:-----|:------------\n`type` | `string` | The result type of this call. If the behavior of this spy has thrown an error, this is `\"throw\"`. Otherwise, this is `\"return\"`.\n`this` | `This<T>` | The `this` value of this call.\n`arguments` | `Parameters<T>` | The arguments of this call.\n`return` | `ReturnType<T>` | The return value of this call. This exists only if `type === \"return\"`.\n`throw` | `any` | The thrown value of this call. This exists only if `type === \"throw\"`.\n\n### s.firstCall\n\nThis is equivalent to `s.calls[0]`.\n\n### s.lastCall\n\nThis is equivalent to `s.calls[s.calls.length - 1]`.\n\n### s.returnedCalls\n\nThe array of call information, only the call which returned a value successfully.\n\nThis is equivalent to `s.calls.filter(c => c.type === \"return\")`.\n\n### s.firstReturnedCall\n\nThis is equivalent to `s.returnedCalls[0]`.\n\n### s.lastReturnedCall\n\nThis is equivalent to `s.returnedCalls[s.returnedCalls.length - 1]`.\n\n### s.thrownCalls\n\nThe array of call information, only the call which threw an error.\n\nThis is equivalent to `s.calls.filter(c => c.type === \"throw\")`.\n\n### s.firstThrownCall\n\nThis is equivalent to `s.thrownCalls[0]`.\n\n### s.lastThrownCall\n\nThis is equivalent to `s.thrownCalls[s.thrownCalls.length - 1]`.\n\n### s.reset()\n\nClear the `s.calls` in order to reuse this spy.\n\n\n## ⚠️ Known Issues\n\n### TypeScript cannot infer the `this` type of methods\n\n```ts\nconst box = {\n    value: 0,\n    set(value: number): void {\n        this.value = value\n    },\n}\n\nconst f = spy(box.set)\nf.calls[0].this //→ inferred to `{}` rather than `typeof box`!\n\n// Workaround:\nconst f1 = spy<(this: typeof box, value: number) => void>(box.set)\nf.calls[0].this //→ correct `typeof box`.\n```\n\n\n## 📰 Changelog\n\n- [GitHub Releases](https://github.com/mysticatea/spy/releases)\n\n\n## ❤️ Contributing\n\nWelcome contributing!\n\nPlease use GitHub's Issues/PRs.\n\n### Development Tools\n\n- `npm test` runs tests and measures coverage.\n- `npm run build` compiles TypeScript source code into `dist` directory.\n- `npm run clean` removes the temporary files which are created by `npm test` and `npm run build`.\n- `npm run lint` runs ESLint.\n- `npm run watch` runs tests with `--watch` option.\n","readmeFilename":"README.md"}